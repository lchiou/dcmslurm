function all_results = dcmslurm_stats(data_all, n_matrices)

	% Given a single structure array generated by dcmslurm_aggregate, computes
	% confidence intervals for the F values.
    %
    % Args:
    % data_all - input MATLAB structure array
    % n_matrices - number of matrices in the structure array
    %
    % Returns:
    % all_results - structure array with F values and confidence intervals
    %
    % Lawrence Chiou
    % 20 October 2017

    % helper function that finds whether all entries of two matrices are equal
	function bool_out = Acmp(matrix_1, matrix_2)
		bool_out = isequal(find(matrix_1), find(matrix_2));
	end

	A_matrix_0 = data_all(1).A;
	A_matrix_0(A_matrix_0 ~= 0) = 1;
	A_matrices{n_matrices} = A_matrix_0;
	for i=1:length(data_all)
		duplicate = false;
		counter = 1;
		disp(i)
		for j=1:n_matrices
			if Acmp(data_all(i).A, A_matrices{j})
				duplicate = true;
			end
			if duplicate == false
				counter = counter + 1;
				A_matrix_new = data_all(i).A;
				A_matrix_new(A_matrix_new ~= 0) = 1;
				A_matrices{counter} = A_matrix_new;
			end
		end
	end

	conditions = unique([data_all.condition]);
	n_subjects = max([data_all.subject]);

	all_results.favg = zeros(length(A_matrices), length(conditions));
	all_results.flower = zeros(length(A_matrices), length(conditions));
	all_results.fupper = zeros(length(A_matrices), length(conditions));
	all_results.A_matrices = A_matrices;
	all_results.conditions = conditions;

	for c=1:length(conditions)
		for a=1:length(A_matrices)
			counter = 0;
			f_set = zeros(1, n_subjects);
			for i=1:length(data_all)
				if strcmp(data_all(i).condition, conditions(c))
					if Acmp(data_all(i).A, A_matrices{a})
						counter = counter + 1;
						f_set(counter) = data_all(i).F;
					end
				end
			end
			mu = mean(f_set(1:counter));
			err = 1.96 * std(f_set)/sqrt(length(f_set));
			all_results.favg(a,c) = mu;
			all_results.flower(a,c) = mu - err;
			all_results.fupper(a,c) = mu + err;
		end
	end
end